// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model pool {
  id        String   @id @default(cuid())
  title     String
  code      String   @unique //codigo unico
  createdAt DateTime @default(now())
  // participants participants[]

  // todo bolao vai ter um dono
  owner        user?          @relation(fields: [userId], references: [id])
  userId       String?
  participants participants[]
}

// tabela do usuario
model user {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  googleId  String?   @unique
  avatarUrl String?
  createdAt DateTime @default(now())

  //  um mesmo usuario pode ser participante de varios boloes
  participatingAt participants[]
  ownPools        pool[]
}

// tabela de jogos
model games {
  id                    String   @id @default(cuid())
  date                  DateTime
  firstTeamCountryCode  String
  secondTeamCountryCode String
  //relacionamento inverso um game sempre tera varios palpites
  guesses               Guess[]
}

// tabela de palpite
model Guess {
  id              String   @id @default(cuid())
  firstTeamPoint  Int
  secondTeamPoint Int
  createdAt       DateTime @default(now())
  gamesId         String
  participantsId  String

  //  relacionamentos

  game games @relation(fields: [gamesId], references: [id])

  // oo palpite sempre sera feito por um participante
  participant participants @relation(fields: [participantsId], references: [id])
}

//  tabela de participantes
model participants {
  id      String  @id @default(cuid())
  guesses Guess[]
  User    user    @relation(fields: [userId], references: [id])
  userId  String

  // todo participante vai estar associado a um bolao
  pool   pool   @relation(fields: [poolId], references: [id])
  poolId String

  //informar ao banco de dados que se eu procurar um usuario ou bolao ss√≥ irei encontrar um registro
  @@unique([userId, poolId])
}
